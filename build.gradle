buildscript {

    ext {
        springBootVersion = '1.4.1.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
    dependencies {

        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
        classpath 'net.serenity-bdd:serenity-gradle-plugin:1.1.31'

        classpath "com.moowork.gradle:gradle-node-plugin:0.12"
        classpath "com.moowork.gradle:gradle-gulp-plugin:0.12"

        classpath 'org.owasp:dependency-check-gradle:1.4.3'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'com.moowork.gulp'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'application'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

group 'com.hod'
version '0.1.0'

mainClassName="uk.gov.digital.ho.proving.income.ServiceRunner"

build.dependsOn gulp_build, gulp_test

if (System.getenv('VERSION')) {
  version = System.getenv('VERSION')
}


jar {
    baseName = 'pttg-ip-gt-ui'
    if (System.getenv('GIT_COMMIT')) {
      version = version + '.' + System.getenv('GIT_COMMIT')
    }
    manifest {
      attributes 'Implementation-Title': baseName,
                 'Implementation-Version': version
   }
}

jar.into('static') {
    from('src/main/webapp')
}

jar.mustRunAfter(gulp_build)

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "http://repo.spring.io/plugins-release" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.4.3"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.7.4"
    compile "com.fasterxml.jackson.core:jackson-databind:2.7.4"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4"
    compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.4"

    compile "com.sun.jersey:jersey-client:1.19"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2"

    compile "org.json:json:20160212"
    compile "ch.qos.logback:logback-classic:1.1.3"
    compile "ch.qos.logback:logback-core:1.1.3"
    compile "org.springframework.retry:spring-retry:1.1.4.RELEASE"
    compile "org.aspectj:aspectjrt:1.8.9"
    compile "org.aspectj:aspectjweaver:1.8.9"

    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'net.logstash.logback:logstash-logback-encoder:4.7'
    compile "org.springframework.boot:spring-boot:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"

    testCompile "info.cukes:cucumber-java:1.2.4"
    testCompile "info.cukes:cucumber-junit:1.2.4"
    testCompile "org.codehaus.groovy:groovy-all:2.4.3"

    testCompile 'nl.jqno.equalsverifier:equalsverifier:1.7.2'

    testCompile "com.fasterxml.jackson.core:jackson-annotations:2.7.4"
    testCompile "com.fasterxml.jackson.core:jackson-databind:2.7.4"
    testCompile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4"
    testCompile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.7.4"

    testCompile "com.sun.jersey:jersey-client:1.19"
    testCompile "org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2"

    testCompile "org.json:json:20160212"

    testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
    testCompile "org.spockframework:spock-spring:1.1-groovy-2.4-rc-3"

    testCompile "org.springframework.retry:spring-retry:1.1.4.RELEASE"
    testCompile "org.aspectj:aspectjrt:1.8.9"
    testCompile "org.aspectj:aspectjweaver:1.8.9"

    testCompile "org.springframework:spring-test:4.3.3.RELEASE"
    testCompile "org.springframework.boot:spring-boot-starter-test:1.4.1.RELEASE"

    testCompile "com.jayway.restassured:json-schema-validator:2.9.0"
    testCompile "com.jayway.restassured:rest-assured:2.9.0"

    testCompile "com.github.tomakehurst:wiremock:1.58"
    testCompile "net.serenity-bdd:serenity-core:1.1.31"
    testCompile "net.serenity-bdd:serenity-cucumber:1.1.6"
    testCompile "net.serenity-bdd:serenity-junit:1.1.31"
    testCompile "net.serenity-bdd:serenity-spring:1.1.31"
    testCompile "org.springframework.boot:spring-boot:$springBootVersion"
    testCompile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    testCompile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
}

test {
    exclude 'acceptance/**'
}

task acceptanceTest(type: Test) {
    description 'Runs the acceptance tests.'
    group 'verification'
    include 'acceptance/**'
    finalizedBy aggregate
    outputs.upToDateWhen {false}
}

processResources {
    filesMatching("**/application.properties") {
        expand( project.properties )
    }
}

clean.doFirst{
    delete 'pttg-income-proving-ui.log'
}

tasks.withType(JavaCompile) {

    options.fork = true  // Fork your compilation into a child process
    options.forkOptions.setMemoryMaximumSize("256m")
}

tasks.withType(GroovyCompile) {

    options.fork = true  // Fork your compilation into a child process
    options.forkOptions.setMemoryMaximumSize("256m")
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.with {
        force = true
        additionalParameters = ["-Xmax-classfile-name", "127"]
        forkOptions.setMemoryMaximumSize("256m")
    }
}

test {
    maxHeapSize = "256m"
}
